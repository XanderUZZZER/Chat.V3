<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAkHer/Jhzq/ygb6/8oG+v/Jhvt/yQb7f8mG+3/JBzr/yAf6/8gHur/Jh/t/ykf7v8kHOv/Ihrq/yQb
        7v8kHu//IR/r/yMi7P8lH+7/Ixrt/yQX7/8oGfD/Kxzs/yoe6v8iHun/Ihzr/ykY8f8rGPH/KRvr/yYc
        6v8iHOv/Hx3r/yQe6f8mHOr/KRrt/yka7f8oG+3/Jhzr/ygc6v8mHOr/Ix/t/yAd7f8gGev/IBbr/yEY
        7/8lHPP/JRvw/yEZ6f8jHuj/Hxri/yEa5/8mHfD/Jxrx/yUY7/8oGez/KR3r/yEe6f8hHur/KBnw/ysZ
        8P8oG+3/JB3q/x8f6f8dIOf/Ih3q/yQc6/8oGu7/KBru/yYa7v8mG+3/KBzq/yYc6v8gHOr/Ih7s/ykh
        7f8qIer/Jx3n/yge5P8tIt//LSLa/ykh1P8sJdf/KyPc/ycf4P8nHOb/KR3s/yod7P8nHev/IB7q/yAd
        6/8oGfD/KRjx/ygZ8P8iHO3/Hx/p/xsh5v8fHO3/IRvu/yMa8P8kGvD/Ixrw/yQb7v8mHOv/Jhzr/yUc
        7f8hGeL/KyHc/zQr2f8yJ8//MyfD/zovu/87MbX/OjG2/zszu/83L8H/MyvJ/zEq1v8qItz/JRrf/yQb
        5/8fHev/Hhzu/yYa8P8oGfH/Jhjy/yIa8P8fHev/Gx/p/x0c7v8fHO7/Ihrw/yIa8P8hG/D/Ihvw/yQb
        7f8mHOv/Jx7q/y4o4v8xKsb/KCCo/x0Uj/8LB27/CQdU/wkIUP8JCFT/CghW/xINb/8oJJT/Lyyw/zIu
        yP80K9z/KiLj/x8e6v8eHO7/JBvu/ygZ8P8mGPL/JBnx/x8c7f8dHur/Hxzu/x8c7v8iG+7/Ihvu/x8b
        8P8fG/D/Ihvv/yQd6v8mIOL/JSDE/xIQgv8HBVP/BAND/wAAMP8AABz/AAAZ/wAAIf8AACD/AgEt/wYG
        Qf8JCVr/Hx6L/zUuv/8uJtX/IiDl/x8c7f8kHev/Jhvs/yca7/8mGu7/Ihzs/yAd6/8hHO3/IRzt/yUb
        7f8lG+3/IRvw/x8b8P8hG+7/Ix/n/yUi2v8ICJj/AgJQ/wAALP8AACD/AAAZ/wABFf8AAA7/AAAT/wAA
        F/8AABX/AAAZ/wAAJ/8GBUb/GxSD/zYtxP8nI93/Ih7p/yQe6P8mHen/KBvr/yYc7P8kHOv/Ihzr/yUc
        6/8nHOv/Khvr/yob7P8lGu7/IRvu/yEc7f8iIeT/JCXS/wIFiv8AAED/AAAn/wAAJv8AACj/AAAs/wAA
        K/8AAC//AAAp/wAAH/8AABf/AAAS/wAAI/8GBEz/KiKd/y4o0/8mH+T/Jh3l/yke6v8pHev/Jhrq/yYd
        7P8jG+r/Jhzq/ygc6v8sG+r/LBrr/yga7v8kG+7/Ihzr/yIh4/8lJtL/BAiO/wAATf8AADf/BAFK/xwa
        bv8nKIj/Ky6R/ywrkf8mJHr/BAI+/wAAHf8BARH/AAAS/wIAMf8TCm7/MijG/ysh4P8oHeX/KB3q/ygc
        6/8lGun/Jxzt/yQb7P8jHOz/JRvs/ysa7P8sGuz/KRrt/yYb7f8kHer/IyDl/yIg1v8FA6D/AwJ2/yMb
        i/8sIqT/NC69/yopxf8qLMz/KynI/zIvuP8sJor/BAM7/wEBGP8AAAz/AQAd/wUCSv8wJbT/LiPa/ywd
        5f8oGuv/Jhrt/yMZ7f8lG+7/Ixvu/x4b7/8iG+7/KRru/yoa7v8oG+3/Jhzs/yUc6v8mHuj/KCLk/xwV
        zP8pHcD/NibJ/zMl1f8tI97/IR7i/yAf5P8lI+H/LSrO/zQwp/8LCE//AQAa/wEBDP8AABL/AgI6/yog
        o/8uI9P/Lh7m/ygZ7f8nGvD/JBrw/yMa7/8iG+7/HBvx/x8b8P8lGfD/Jxrv/yUb7v8lG+z/Jxvr/ycc
        6v8mHuz/KiDr/y0c4v80IeX/LB3n/ycb6P8pI/D/IiDm/yMi3P8yMc3/NTSh/woKSv8CAxr/AQAK/wEA
        D/8DAjf/Jh+d/y0kz/8tH+T/KBrr/ycc7/8kG+//Ihvv/yIc7f8cG/H/Hhvx/yIa8f8lGvD/JBvu/yQb
        7f8oG+v/KBvs/yMZ7v8kGvD/Khrv/ywa7v8sHu7/Jhrk/y0m5/8pI9f/MC/Q/zExsf8WFmf/AwQw/wEC
        FP8AAAj/AAAS/wICOf8pJKT/LCXR/yog4/8mG+n/JRzs/yMb7f8iG+7/Ihvt/yAc7f8iHO3/Ixvv/yQb
        7/8kGu//JRru/yga7P8oG+z/Ihvt/x4a6/8kHOz/JR7o/yol5P8qI9b/NCvR/zUsv/8dGZL/EhJo/wEB
        L/8AABf/AAAO/wIAE/8AACD/BwNQ/y0otv8qJdn/JR/k/yQc6v8kHOv/Ihrs/yQa8P8jGvD/JBzq/yQc
        6/8lG+3/JRru/yUa8P8nGu//Khrt/ykb6/8jHev/HBzl/yIi5f8jJNr/KivO/yoot/8eF5X/GhV1/wMB
        SP8AAC//AAAW/wAADf8AABD/AgAf/wIBN/8dF4H/LyrJ/yci4f8iHef/JB3s/yQc7P8jGev/Jhrx/yUY
        8f8lHOz/Ixzs/yUb7f8lGu//Jxjy/ykY8v8rGe7/KRvr/yIb6f8iIOX/KCjd/yssyv8bG5r/EhJz/wMB
        Sf8AAC3/AAAi/wAAGf8AAA3/AAAR/wAAHv8BATL/ExBt/zAqs/8rJtf/IyDl/yEd6P8jHuv/JRzr/yYb
        6/8oG+7/Jxrt/yIb7v8iHO3/Ixvs/yQa7/8nF/P/KRfz/yoZ7v8oG+v/JBzp/ykk4/8pJ8r/Gxqb/wYF
        WP8AADL/AAAd/wAAEv8AABL/AAAU/wEAGf8AACL/BQJA/xsYcf8sJqv/LSjO/ych3/8iHuj/IR7p/yIe
        6f8mHOr/KBzq/ykc6v8pHOr/IBvu/yAc7P8hHev/Ixzs/yQa8P8lGvD/Jxvs/yUd6f8jHuj/KSbY/yIg
        qP8CAl3/AAAx/wAAGP8CABH/AQAQ/wAAGf8AACX/AQE6/xgVYv8iGoX/ODC2/zIpzv8rIt3/Jx3n/yQc
        6/8jHun/Ix7p/yUd6v8nHOr/KBzq/ygd6f8eHO3/Hx3r/yEe6v8iHur/IR3r/yEd6/8jHun/Ih/n/yEf
        5P8kJcr/Dw54/wEBN/8AABz/AQAP/wMAFP8BAB//Bwc//xYXZP8XFn7/NS6v/zctxf8wJND/LB/f/y0f
        6/8oGu3/Jhvu/yQc6/8kHer/JB3q/yUc6/8lHOz/JRzr/x0d7f8gHev/Ix3p/yMe6f8hHur/IR7q/yMe
        6f8jH+f/IiHi/x8huv8CAk//AAAd/wIBD/8BABH/AQEh/xQSUP8gIYT/NDe0/y4sxP8sJ9P/KiPe/ycc
        4/8qHO7/Jxju/ygZ8f8mGvD/JBzr/yMd6v8jHOv/Ixzs/yQb7f8lG+3/Hh3t/yEd7P8nHOr/Jx3p/yId
        6v8iHez/JRzr/yUe5/8hH97/Gxqr/wICP/8AAA//AwIL/wICGv8MC0T/NTCV/zM0vP8nKs3/ISDa/yQh
        6P8kIO3/Jh7w/ygc8f8mF+3/KBnx/yYa7/8jHOz/Ih3q/yIc6/8iHO3/JBvu/yYa7/8gG+//Ihvu/ygb
        7P8oG+v/Ixzs/yIc7f8mG+7/Jx3q/yUh4P8WFqT/AQE7/wAADP8AAAf/BAQf/x8bZP83NKT/MTHD/yQk
        z/8jItv/JiPh/yIg3P8pI+D/Jh3e/yse5v8pG+v/Jhvt/yIc7f8hHev/IR3r/yIc7P8lG+7/Jxrw/yEY
        8/8jGvH/KBrv/yka7f8kG+3/Ihvu/yUa8P8nHOv/JiHh/x0brf8CAkH/AAAV/wAADf8BARr/FxVW/zIw
        mP82NLj/MzLI/zIvyf8xLcb/Jya2/yIfsP8lILz/LSTT/ysf4/8nHOr/Ihzt/yEd7P8hHev/Ihzr/yYa
        7v8nGe//Ixf1/yUY8/8nGvD/Jhvt/yIc7P8hG+3/Ixvv/yMd6/8mI+T/KCbA/wMDWP8AACj/AAAW/wAA
        Ff8BASr/FxZf/y4riv8rKJH/KyaQ/yQghf8WFnL/AQFg/wMDd/8zK8X/LiLd/ykc6f8jHO3/Ihzt/yIe
        6v8jHOv/JRvs/yUa7v8nFvb/Jhfz/yQb7v8iHOv/IB7q/x8d6/8eHO3/Hx3r/yAf4v8sK9H/EhGF/wEB
        Rf8AACL/AAAU/wAAF/8AACH/AQAs/wIAL/8EADH/AgAu/wAAKP8AADb/AwNc/zYvtv8wJNf/Kxzo/ycb
        7f8lG+3/JB3q/yQd6v8kHOv/JBvs/ykW9P8oGPH/JBvt/yEe6v8fH+n/Hx7q/x4d7f8fHev/IB3l/ygl
        2v8xLsH/Cwl0/wIBPf8AACX/AAAc/wAAGP8AABr/AwAd/wAAG/8AABz/AAAg/wAAM/8DA1v/MCqy/y8k
        1v8rHOj/KRrt/yka7v8nHOv/JB3q/yQc6/8iHOv/Kxjw/yga7f8kHer/IR7p/yEf6P8iHur/Ihzt/yIb
        7v8mIO7/IRrf/ywl2v8qJbv/Ew99/wgHUP8BATz/AQAt/wAAJv8AACX/AAAp/wAAMf8AADj/AwRQ/wkK
        fv8wLcP/LSPc/ysb6v8rGe7/Kxnu/yka7f8mHOz/Ihzt/yEc7f8rGuz/KBvr/yQd6v8iHun/Ih7p/yUd
        6/8nGu7/Jhrw/yIY7P8pIfH/JBrk/y4l2/81LsX/LCim/w8Mef8MCWb/CQlS/wgIUv8HB1v/CAdl/wcH
        bv8YGJH/JSa3/ygmz/8oIOL/KBvr/yoa7f8qGe7/KRru/ygb7f8kG+7/Ihzt/ykc6v8nHOr/JB3q/yId
        6v8kHOv/KBvt/ysZ8P8rGPH/KBry/yQZ8f8mGvD/LCHt/ywk3/8oIs7/LyvL/y8swP83Nrv/NTK1/zEt
        uv8yL8P/KynD/yopzP8rKNv/JR/g/yQe6f8kG+3/Jxvr/ygb7f8oGu7/KBru/yYa8P8kG+7/Jhzq/yQd
        6v8iHOv/Ihzt/yIc7f8nG+3/Lhnu/ywY8P8lGPD/IRnw/yIX7v8kGev/Jx7r/yYf5P8vKef/KCPY/ycj
        z/8vK9b/KyjZ/ysl2/8qJd//JyLh/ygg6P8mHuv/JBvt/yIc7f8iHer/JB3q/yQb7v8mGvD/Jhrw/yYa
        8P8iHO3/Ihzt/yEb7v8hG+7/Hx3r/yMc6/8sGu3/Kxnu/yQc8f8iHO//KB7s/yUb5P8jHef/JyHq/x8Y
        3/8oIuX/KiLl/ygi5P8hGuD/JB3k/ywi6/8mG+j/Jhfq/yob8v8mGu7/Ihzt/x8f6f8fH+n/IRzt/yIb
        7v8mGvD/KBnw/yEb7v8hG+7/IRvw/x8c7v8dHev/IR7q/ysb6/8rGu3/Ihzx/x4a6/8kHOb/KiHn/yYg
        6v8iHen/KB/r/yYd6f8kHen/JR7r/yUc7f8jGuz/KBvr/yca7P8rGfH/KRjx/yYa8P8iHOv/HR/p/xwg
        6P8fHO3/IRvu/ygZ8P8pGfD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>